map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

upstream frontend {
    server ${FRONTEND_SERVER_HOST}:${FRONTEND_SERVER_PORT}
}

upstream api {
    server ${API_SERVER_HOST}:${API_SERVER_PORT}
}

upstream grafana {
    server ${GRAFANA_HOST}:${GRAFANA_PORT};
}

server {
    listen 80;
    listen [::]:80;
    server_name ${SERVER_DOMAIN};

    location / {
        proxy_pass ${FRONTEND_SERVER_PROTOCOL}://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
        proxy_pass ${API_SERVER_PROTOCOL}://api;
        rewrite ^/api/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/metrics {
        return 403;
    }

    location /monitor/ {
        proxy_set_header Host $host;
        proxy_pass ${GRAFANA_PROTOCOL}://grafana;
    }

    location /monitor/api/live/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_pass ${GRAFANA_PROTOCOL}://grafana;
    }
}