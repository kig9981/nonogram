services:
  testnonogramserverdb:
    image: postgres:latest
    container_name: ${DB_HOST}
    restart: always
    environment:
      PGUSER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGPORT: ${DB_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - test_nonogram_net
    env_file:
      - test.env

  testnonogramserver:
    image: nonogram_server:${NONOGRAM_SERVER_VERSION:-latest}
    container_name: ${NONOGRAM_SERVER_HOST}
    environment:
      NONOGRAM_SERVER_SECRET_KEY: ${NONOGRAM_SERVER_SECRET_KEY}
      NONOGRAM_SERVER_HOST: ${NONOGRAM_SERVER_HOST}
      API_SERVER_PROTOCOL: ${API_SERVER_PROTOCOL}
      API_SERVER_HOST: ${API_SERVER_HOST}
      API_SERVER_PORT: ${API_SERVER_PORT}
      ENABLE_PROMETHEUS: ${ENABLE_PROMETHEUS}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      LOG_PATH: ${LOG_PATH}
      DEBUG: ${DEBUG}
    command: bash -c "python src/NonogramServer/manage.py runserver 0.0.0.0:${NONOGRAM_SERVER_PORT}"
    healthcheck:
      test: curl --fail http://localhost:${NONOGRAM_SERVER_PORT}/healthcheck || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    ports:
      - "${NONOGRAM_SERVER_PORT}:${NONOGRAM_SERVER_PORT}"
    networks:
      - test_nonogram_net
    depends_on:
      testnonogramserverdb:
        condition: service_healthy
    env_file:
      - test.env

  testapiserver:
    image: api_server:${API_SERVER_VERSION:-latest}
    container_name: ${API_SERVER_HOST}
    environment:
      API_SERVER_SECRET_KEY: ${API_SERVER_SECRET_KEY}
      NONOGRAM_SERVER_PROTOCOL: ${NONOGRAM_SERVER_PROTOCOL}
      NONOGRAM_SERVER_HOST: ${NONOGRAM_SERVER_HOST}
      NONOGRAM_SERVER_PORT: ${NONOGRAM_SERVER_PORT}
      FRONTEND_SERVER_PROTOCOL: ${FRONTEND_SERVER_PROTOCOL}
      FRONTEND_SERVER_HOST: ${FRONTEND_SERVER_HOST}
      FRONTEND_SERVER_PORT: ${FRONTEND_SERVER_PORT}
      API_SERVER_HOST: ${API_SERVER_HOST}
      ENABLE_PROMETHEUS: ${ENABLE_PROMETHEUS}
      SERVER_DOMAIN: ${SERVER_DOMAIN}
      DEBUG: ${DEBUG}
      LOG_PATH: ${LOG_PATH}
    command: bash -c "python src/ApiServer/manage.py runserver 0.0.0.0:${API_SERVER_PORT}"
    healthcheck:
      test: curl --fail http://localhost:${API_SERVER_PORT}/healthcheck || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    ports:
      - "${API_SERVER_PORT}:${API_SERVER_PORT}"
    networks:
      - test_nonogram_net
    env_file:
      - test.env

networks:
  test_nonogram_net:
    driver: bridge